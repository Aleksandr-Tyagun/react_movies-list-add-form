{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","initState","titleErrorMsg","descriptionErrorMsg","imgUrlErrorMsg","imdbUrlErrorMsg","validationStatus","urlValidation","RegExp","NewMovie","state","validateForm","imdbIdErrorMsg","setState","handleSubmit","e","preventDefault","props","addMovie","handleInputTitle","target","value","length","handleInputDescription","handleInputImgUrl","test","handleInputImdbUrl","handleInputImdbId","onSubmit","this","type","onChange","placeholder","rows","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c287f57.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nconst initState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  titleErrorMsg: '',\n  descriptionErrorMsg: '',\n  imgUrlErrorMsg: '',\n  imdbUrlErrorMsg: '',\n  validationStatus: false,\n};\n// eslint-disable-next-line max-len\nconst urlValidation = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\nexport class NewMovie extends Component {\n  state = initState;\n\n  validateForm = () => {\n    if (\n      this.state.titleErrorMsg === ''\n      && this.state.imgUrlErrorMsg === ''\n      && this.state.imdbUrlErrorMsg === ''\n      && this.state.imdbIdErrorMsg === ''\n    ) {\n      this.setState({\n        validationStatus: true,\n      });\n    } else {\n      this.setState({\n        validationStatus: false,\n      });\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.state.validationStatus) {\n      this.props.addMovie({\n        title: this.state.title,\n        description: this.state.description,\n        imgUrl: this.state.imgUrl,\n        imdbUrl: this.state.imdbUrl,\n        imdbId: this.state.imdbId,\n      });\n\n      this.setState(initState);\n    }\n  }\n\n  handleInputTitle = (e) => {\n    this.setState({\n      title: e.target.value,\n      titleErrorMsg: '',\n    }, () => {\n      if (this.state.title.length === 0) {\n        this.setState({\n          titleErrorMsg: 'This field is required',\n        });\n      }\n    });\n\n    this.validateForm();\n  }\n\n  handleInputDescription = (e) => {\n    this.setState({\n      description: e.target.value,\n      descriptionErrorMsg: '',\n    });\n\n    this.validateForm();\n  }\n\n  handleInputImgUrl = (e) => {\n    this.setState({\n      imgUrl: e.target.value,\n      imgUrlErrorMsg: '',\n    }, () => {\n      if (this.state.imgUrl.length === 0) {\n        this.setState({\n          imgUrlErrorMsg: 'This field is required',\n        });\n\n        return;\n      }\n\n      if (!urlValidation.test(this.state.imgUrl)) {\n        this.setState({\n          imgUrlErrorMsg: 'This field should be a valid URL',\n        });\n      }\n    });\n\n    this.validateForm();\n  }\n\n  handleInputImdbUrl = (e) => {\n    this.setState({\n      imdbUrl: e.target.value,\n      imdbUrlErrorMsg: '',\n    }, () => {\n      if (this.state.imdbUrl.length === 0) {\n        this.setState({\n          imdbUrlErrorMsg: 'This field is required',\n        });\n\n        return;\n      }\n\n      if (!urlValidation.test(this.state.imdbUrl)) {\n        this.setState({\n          imdbUrlErrorMsg: 'This field should be a valid URL',\n        });\n      }\n    });\n\n    this.validateForm();\n  }\n\n  handleInputImdbId = (e) => {\n    this.setState({\n      imdbId: e.target.value,\n      imdbIdErrorMsg: '',\n    }, () => {\n      if (this.state.imdbId.length === 0) {\n        this.setState({\n          imdbIdErrorMsg: 'This field is required',\n        });\n      }\n    });\n\n    this.validateForm();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"new-movie\"\n        onSubmit={this.handleSubmit}\n      >\n        <label className=\"new-movie__label\">\n          title:\n          <input\n            className={\n              this.state.titleErrorMsg\n                ? 'new-movie__input new-movie__input--error'\n                : 'new-movie__input'\n            }\n            type=\"text\"\n            value={this.state.title}\n            onChange={this.handleInputTitle}\n            placeholder=\"Movie name\"\n          />\n          <span className=\"new-movie__error\">\n            {this.state.titleErrorMsg}\n          </span>\n        </label>\n        <label className=\"new-movie__label\">\n          description:\n          <textarea\n            className=\"new-movie__input\"\n            type=\"text\"\n            value={this.state.description}\n            onChange={this.handleInputDescription}\n            rows=\"6\"\n            placeholder=\"Movie description\"\n          />\n          <span className=\"new-movie__error\">\n            {this.state.descriptionErrorMsg}\n          </span>\n        </label>\n        <label className=\"new-movie__label\">\n          imgUrl:\n          <input\n            className={\n              this.state.imgUrlErrorMsg\n                ? 'new-movie__input new-movie__input--error'\n                : 'new-movie__input'\n            }\n            type=\"text\"\n            value={this.state.imgUrl}\n            onChange={this.handleInputImgUrl}\n            placeholder=\"https://www.example.com\"\n          />\n          <span className=\"new-movie__error\">\n            {this.state.imgUrlErrorMsg}\n          </span>\n        </label>\n        <label className=\"new-movie__label\">\n          imdbUrl:\n          <input\n            className={\n              this.state.imdbUrlErrorMsg\n                ? 'new-movie__input new-movie__input--error'\n                : 'new-movie__input'\n            }\n            type=\"text\"\n            value={this.state.imdbUrl}\n            onChange={this.handleInputImdbUrl}\n            placeholder=\"https://www.example.com\"\n          />\n          <span className=\"new-movie__error\">\n            {this.state.imdbUrlErrorMsg}\n          </span>\n        </label>\n        <label className=\"new-movie__label\">\n          imdbId:\n          <input\n            className={\n              this.state.imdbIdErrorMsg\n                ? 'new-movie__input new-movie__input--error'\n                : 'new-movie__input'\n            }\n            type=\"text\"\n            value={this.state.imdbId}\n            onChange={this.handleInputImdbId}\n            placeholder=\"Movie imdb id\"\n          />\n          <span className=\"new-movie__error\">\n            {this.state.imdbIdErrorMsg}\n          </span>\n        </label>\n\n        <button\n          className={\n            this.state.validationStatus\n              ? 'new-movie__button'\n              : 'new-movie__button new-movie__button--disabled'\n          }\n          type=\"submit\"\n          disabled={!this.state.validationStatus}\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}